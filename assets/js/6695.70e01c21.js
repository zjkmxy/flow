"use strict";(self.webpackChunknew_website=self.webpackChunknew_website||[]).push([[6695],{86695:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>u,contentTitle:()=>s,default:()=>p,frontMatter:()=>a,metadata:()=>r,toc:()=>d});var i=t(58168),o=(t(96540),t(15680));const a={title:"Announcing User Defined Type Guards in Flow","short-title":"Announcing User Defined Type Guards in Flow",author:"Panagiotis Vekris","medium-link":"https://medium.com/flow-type/announcing-user-defined-type-guards-in-flow-b979bb2e78cf"},s=void 0,r={permalink:"/blog/2024/03/05/Announcing-User-Defined-Type-Guards-in-Flow",source:"@site/blog/2024-03-05-Announcing-User-Defined-Type-Guards-in-Flow.md",title:"Announcing User Defined Type Guards in Flow",description:"Flow now lets you define a function that encodes a type predicate over its parameter.",date:"2024-03-05T00:00:00.000Z",formattedDate:"March 5, 2024",tags:[],hasTruncateMarker:!1,authors:[{name:"Panagiotis Vekris"}],frontMatter:{title:"Announcing User Defined Type Guards in Flow","short-title":"Announcing User Defined Type Guards in Flow",author:"Panagiotis Vekris","medium-link":"https://medium.com/flow-type/announcing-user-defined-type-guards-in-flow-b979bb2e78cf"},prevItem:{title:"Announcing Conditional Types",permalink:"/blog/2024/03/05/Announcing-Conditional-Types"},nextItem:{title:"New type casting syntax for Flow: 'as'",permalink:"/blog/2024/02/06/New-type-casting-syntax-for-Flow-as"}},u={authorsImageUrls:[void 0]},d=[],l={toc:d};function p(e){let{components:n,...t}=e;return(0,o.mdx)("wrapper",(0,i.A)({},l,t,{components:n,mdxType:"MDXLayout"}),(0,o.mdx)("p",null,"Flow now lets you define a function that encodes a type predicate over its parameter."))}p.isMDXComponent=!0}}]);