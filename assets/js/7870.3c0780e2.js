"use strict";(self.webpackChunknew_website=self.webpackChunknew_website||[]).push([[7870],{17870:(e,t,o)=>{o.r(t),o.d(t,{assets:()=>p,contentTitle:()=>i,default:()=>u,frontMatter:()=>r,metadata:()=>s,toc:()=>l});var n=o(58168),a=(o(96540),o(15680));const r={title:"Announcing Import Type","short-title":"Import Type",author:"Jeff Morrison",hide_table_of_contents:!0},i=void 0,s={permalink:"/blog/2015/02/18/Import-Types",source:"@site/blog/2015-02-18-Import-Types.md",title:"Announcing Import Type",description:"As of Flow 0.3.0, it's now possible to import types from another module. So, for example, if you're only importing a class for purposes of referencing it in a type annotation, you can now use the new import type syntax to do this.",date:"2015-02-18T00:00:00.000Z",formattedDate:"February 18, 2015",tags:[],hasTruncateMarker:!0,authors:[{name:"Jeff Morrison"}],frontMatter:{title:"Announcing Import Type","short-title":"Import Type",author:"Jeff Morrison",hide_table_of_contents:!0},prevItem:{title:"Announcing Flow Comments",permalink:"/blog/2015/02/20/Flow-Comments"},nextItem:{title:"Announcing Typecasts",permalink:"/blog/2015/02/18/Typecasts"}},p={authorsImageUrls:[void 0]},l=[{value:"Motivation",id:"motivation",level:2}],m={toc:l};function u(e){let{components:t,...o}=e;return(0,a.mdx)("wrapper",(0,n.A)({},m,o,{components:t,mdxType:"MDXLayout"}),(0,a.mdx)("p",null,"As of Flow 0.3.0, it's now possible to import types from another module. So, for example, if you're only importing a class for purposes of referencing it in a type annotation, you can now use the new ",(0,a.mdx)("inlineCode",{parentName:"p"},"import type")," syntax to do this."),(0,a.mdx)("h2",{id:"motivation"},"Motivation"),(0,a.mdx)("p",null,"Has this ever happened to you:"),(0,a.mdx)("pre",null,(0,a.mdx)("code",{parentName:"pre",className:"language-JavaScript"},"// @flow\n\n// Post-transformation lint error: Unused variable 'URI'\nimport URI from \"URI\";\n\n// But if you delete the require you get a Flow error:\n// identifier URI - Unknown global name\nmodule.exports = function(x: URI): URI {\n  return x;\n}\n")),(0,a.mdx)("p",null,"Now you have an out! To solve this problem (and with an eye toward a near future with ES6 module syntax), we've added the new ",(0,a.mdx)("inlineCode",{parentName:"p"},"import type")," syntax.  With ",(0,a.mdx)("inlineCode",{parentName:"p"},"import type"),", you can convey what you really mean here \u2014 that you want to import the ",(0,a.mdx)("em",{parentName:"p"},"type")," of the class and not really the class itself."))}u.isMDXComponent=!0}}]);