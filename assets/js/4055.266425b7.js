"use strict";(self.webpackChunknew_website=self.webpackChunknew_website||[]).push([[4055],{54055:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>r,contentTitle:()=>c,default:()=>d,frontMatter:()=>l,metadata:()=>u,toc:()=>i});var o=a(58168),n=(a(96540),a(15680));const l={title:"Exact object types by default, by default","short-title":"Exact object types by default, by default",author:"George Zahariev","medium-link":"https://medium.com/flow-type/exact-object-types-by-default-by-default-cc559af6f69"},c=void 0,u={permalink:"/blog/2023/02/16/Exact-object-types-by-default-by-default",source:"@site/blog/2023-02-16-Exact-object-types-by-default-by-default.md",title:"Exact object types by default, by default",description:"We announced 5 years ago a plan to eventually make exact object types the default. We are now proceeding with this plan.",date:"2023-02-16T00:00:00.000Z",formattedDate:"February 16, 2023",tags:[],hasTruncateMarker:!1,authors:[{name:"George Zahariev"}],frontMatter:{title:"Exact object types by default, by default","short-title":"Exact object types by default, by default",author:"George Zahariev","medium-link":"https://medium.com/flow-type/exact-object-types-by-default-by-default-cc559af6f69"},prevItem:{title:"Announcing Partial & Required Flow utility types + catch annotations",permalink:"/blog/2023/03/15/Announcing-Partial-and-Required-Flow-utility-types-and-catch-annotations"},nextItem:{title:"Local Type Inference for Flow",permalink:"/blog/2023/01/17/Local-Type-Inference"}},r={authorsImageUrls:[void 0]},i=[],s={toc:i};function d(e){let{components:t,...a}=e;return(0,n.mdx)("wrapper",(0,o.A)({},s,a,{components:t,mdxType:"MDXLayout"}),(0,n.mdx)("p",null,"We announced 5 years ago a plan to eventually make exact object types the default. We are now proceeding with this plan."))}d.isMDXComponent=!0}}]);