"use strict";(self.webpackChunknew_website=self.webpackChunknew_website||[]).push([[8497],{18497:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>m,contentTitle:()=>r,default:()=>s,frontMatter:()=>i,metadata:()=>l,toc:()=>d});var a=n(58168),o=(n(96540),n(15680));n(60681);const i={title:"Event Handling",slug:"/react/events"},r=void 0,l={unversionedId:"react/events",id:"react/events",title:"Event Handling",description:"The React docs for handling events show how an event handler can be attached to",source:"@site/docs/react/events.md",sourceDirName:"react",slug:"/react/events",permalink:"/en/docs/react/events",draft:!1,editUrl:"https://github.com/facebook/flow/edit/main/website/docs/react/events.md",tags:[],version:"current",frontMatter:{title:"Event Handling",slug:"/react/events"},sidebar:"docsSidebar",previous:{title:"Function/Class Components",permalink:"/en/docs/react/function-and-class-components"},next:{title:"Ref Functions",permalink:"/en/docs/react/refs"}},m={},d=[],p={toc:d};function s(e){let{components:t,...n}=e;return(0,o.mdx)("wrapper",(0,a.A)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,o.mdx)("p",null,"The ",(0,o.mdx)("a",{parentName:"p",href:"https://react.dev/learn/responding-to-events"},"React docs for handling events")," show how an event handler can be attached to\na React element. To type these event handlers you may use the ",(0,o.mdx)("inlineCode",{parentName:"p"},"SyntheticEvent<T>"),"\ntypes like this:"),(0,o.mdx)("pre",null,(0,o.mdx)("code",{parentName:"pre",className:"language-flow",metastring:'[{"startLine":5,"startColumn":29,"endLine":5,"endColumn":48,"description":"Cannot call hook [1] because React hooks can only be called within components or hooks. [react-rule-hook]"}]','[{"startLine":5,"startColumn":29,"endLine":5,"endColumn":48,"description":"Cannot':!0,call:!0,hook:!0,"[1]":!0,because:!0,React:!0,hooks:!0,can:!0,only:!0,be:!0,called:!0,within:!0,components:!0,or:!0,"hooks.":!0,'[react-rule-hook]"}]':!0},"import {useState} from 'react';\nimport * as React from 'react';\n\nfunction MyComponent(): React.Node {\n  const [state, setState] = useState({count: 0});\n\n  const handleClick = (event: SyntheticEvent<HTMLButtonElement>) => {\n    // To access your button instance use `event.currentTarget`.\n    event.currentTarget as HTMLButtonElement;\n\n    setState(prevState => ({\n      count: prevState.count + 1,\n    }));\n  };\n\n  return (\n    <div>\n      <p>Count: {state.count}</p>\n      <button onClick={handleClick}>Increment</button>\n    </div>\n  );\n}\n")),(0,o.mdx)("p",null,"There are also more specific synthetic event types like\n",(0,o.mdx)("inlineCode",{parentName:"p"},"SyntheticKeyboardEvent<T>"),", ",(0,o.mdx)("inlineCode",{parentName:"p"},"SyntheticMouseEvent<T>"),", or\n",(0,o.mdx)("inlineCode",{parentName:"p"},"SyntheticTouchEvent<T>"),". The ",(0,o.mdx)("inlineCode",{parentName:"p"},"SyntheticEvent<T>")," types all take a single type\nargument: the type of the HTML element the event handler was placed on."),(0,o.mdx)("p",null,"If you don't want to add the type of your element instance you can also use\n",(0,o.mdx)("inlineCode",{parentName:"p"},"SyntheticEvent")," with ",(0,o.mdx)("em",{parentName:"p"},"no")," type arguments like so: ",(0,o.mdx)("inlineCode",{parentName:"p"},"SyntheticEvent<>"),"."),(0,o.mdx)("blockquote",null,(0,o.mdx)("p",{parentName:"blockquote"},(0,o.mdx)("strong",{parentName:"p"},"Note:")," To get the element instance, like ",(0,o.mdx)("inlineCode",{parentName:"p"},"HTMLButtonElement")," in the example\nabove, it is a common mistake to use ",(0,o.mdx)("inlineCode",{parentName:"p"},"event.target")," instead of\n",(0,o.mdx)("inlineCode",{parentName:"p"},"event.currentTarget"),". The reason you want to use ",(0,o.mdx)("inlineCode",{parentName:"p"},"event.currentTarget")," is\nthat ",(0,o.mdx)("inlineCode",{parentName:"p"},"event.target")," may be the wrong element due to ",(0,o.mdx)("a",{parentName:"p",href:"https://developer.mozilla.org/en-US/docs/Web/API/Document_Object_Model/Examples#example_5_event_propagation"},"event propagation"),".")),(0,o.mdx)("blockquote",null,(0,o.mdx)("p",{parentName:"blockquote"},(0,o.mdx)("strong",{parentName:"p"},"Note:")," React uses its own event system so it is important to use the\n",(0,o.mdx)("inlineCode",{parentName:"p"},"SyntheticEvent")," types instead of the DOM types such as ",(0,o.mdx)("inlineCode",{parentName:"p"},"Event"),",\n",(0,o.mdx)("inlineCode",{parentName:"p"},"KeyboardEvent"),", and ",(0,o.mdx)("inlineCode",{parentName:"p"},"MouseEvent"),".")),(0,o.mdx)("p",null,"The ",(0,o.mdx)("inlineCode",{parentName:"p"},"SyntheticEvent<T>")," types that React provides and the DOM events they are\nrelated to are:"),(0,o.mdx)("ul",null,(0,o.mdx)("li",{parentName:"ul"},(0,o.mdx)("inlineCode",{parentName:"li"},"SyntheticEvent<T>")," for ",(0,o.mdx)("a",{parentName:"li",href:"https://developer.mozilla.org/en-US/docs/Web/API/Event"},"Event")),(0,o.mdx)("li",{parentName:"ul"},(0,o.mdx)("inlineCode",{parentName:"li"},"SyntheticAnimationEvent<T>")," for ",(0,o.mdx)("a",{parentName:"li",href:"https://developer.mozilla.org/en-US/docs/Web/API/AnimationEvent"},"AnimationEvent")),(0,o.mdx)("li",{parentName:"ul"},(0,o.mdx)("inlineCode",{parentName:"li"},"SyntheticCompositionEvent<T>")," for ",(0,o.mdx)("a",{parentName:"li",href:"https://developer.mozilla.org/en-US/docs/Web/API/CompositionEvent"},"CompositionEvent")),(0,o.mdx)("li",{parentName:"ul"},(0,o.mdx)("inlineCode",{parentName:"li"},"SyntheticInputEvent<T>")," for ",(0,o.mdx)("a",{parentName:"li",href:"https://developer.mozilla.org/en-US/docs/Web/API/InputEvent"},"InputEvent")),(0,o.mdx)("li",{parentName:"ul"},(0,o.mdx)("inlineCode",{parentName:"li"},"SyntheticUIEvent<T>")," for ",(0,o.mdx)("a",{parentName:"li",href:"https://developer.mozilla.org/en-US/docs/Web/API/UIEvent"},"UIEvent")),(0,o.mdx)("li",{parentName:"ul"},(0,o.mdx)("inlineCode",{parentName:"li"},"SyntheticFocusEvent<T>")," for ",(0,o.mdx)("a",{parentName:"li",href:"https://developer.mozilla.org/en-US/docs/Web/API/FocusEvent"},"FocusEvent")),(0,o.mdx)("li",{parentName:"ul"},(0,o.mdx)("inlineCode",{parentName:"li"},"SyntheticKeyboardEvent<T>")," for ",(0,o.mdx)("a",{parentName:"li",href:"https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent"},"KeyboardEvent")),(0,o.mdx)("li",{parentName:"ul"},(0,o.mdx)("inlineCode",{parentName:"li"},"SyntheticMouseEvent<T>")," for ",(0,o.mdx)("a",{parentName:"li",href:"https://developer.mozilla.org/en-US/docs/Web/API/MouseEvent"},"MouseEvent")),(0,o.mdx)("li",{parentName:"ul"},(0,o.mdx)("inlineCode",{parentName:"li"},"SyntheticDragEvent<T>")," for ",(0,o.mdx)("a",{parentName:"li",href:"https://developer.mozilla.org/en-US/docs/Web/API/DragEvent"},"DragEvent")),(0,o.mdx)("li",{parentName:"ul"},(0,o.mdx)("inlineCode",{parentName:"li"},"SyntheticWheelEvent<T>")," for ",(0,o.mdx)("a",{parentName:"li",href:"https://developer.mozilla.org/en-US/docs/Web/API/WheelEvent"},"WheelEvent")),(0,o.mdx)("li",{parentName:"ul"},(0,o.mdx)("inlineCode",{parentName:"li"},"SyntheticTouchEvent<T>")," for ",(0,o.mdx)("a",{parentName:"li",href:"https://developer.mozilla.org/en-US/docs/Web/API/TouchEvent"},"TouchEvent")),(0,o.mdx)("li",{parentName:"ul"},(0,o.mdx)("inlineCode",{parentName:"li"},"SyntheticTransitionEvent<T>")," for ",(0,o.mdx)("a",{parentName:"li",href:"https://developer.mozilla.org/en-US/docs/Web/API/TransitionEvent"},"TransitionEvent"))))}s.isMDXComponent=!0}}]);