"use strict";(self.webpackChunknew_website=self.webpackChunknew_website||[]).push([[4393],{54393:(e,t,o)=>{o.r(t),o.d(t,{assets:()=>n,contentTitle:()=>i,default:()=>c,frontMatter:()=>r,metadata:()=>p,toc:()=>l});var s=o(58168),a=(o(96540),o(15680));const r={title:"Private Object Properties Using Flow\u2019s Opaque Type Aliases","short-title":"Private Props w/ Opaque Types",author:"Jordan Brown","medium-link":"https://medium.com/flow-type/private-object-properties-using-flows-opaque-type-aliases-e0100e9b0282"},i=void 0,p={permalink:"/blog/2017/08/25/Private-Object-Properties-Using-Flows-Opaque-Type-Aliases",source:"@site/blog/2017-08-25-Private-Object-Properties-Using-Flows-Opaque-Type-Aliases.md",title:"Private Object Properties Using Flow\u2019s Opaque Type Aliases",description:"In the last few weeks, a proposal for private class fields in Javascript reached",date:"2017-08-25T00:00:00.000Z",formattedDate:"August 25, 2017",tags:[],hasTruncateMarker:!1,authors:[{name:"Jordan Brown"}],frontMatter:{title:"Private Object Properties Using Flow\u2019s Opaque Type Aliases","short-title":"Private Props w/ Opaque Types",author:"Jordan Brown","medium-link":"https://medium.com/flow-type/private-object-properties-using-flows-opaque-type-aliases-e0100e9b0282"},prevItem:{title:"Typing Higher-Order Components in Recompose With Flow",permalink:"/blog/2017/09/03/Flow-Support-in-Recompose"},nextItem:{title:"Even Better Support for React in Flow",permalink:"/blog/2017/08/16/Even-Better-Support-for-React-in-Flow"}},n={authorsImageUrls:[void 0]},l=[],u={toc:l};function c(e){let{components:t,...o}=e;return(0,a.mdx)("wrapper",(0,s.A)({},u,o,{components:t,mdxType:"MDXLayout"}),(0,a.mdx)("p",null,"In the last few weeks, a proposal for ",(0,a.mdx)("a",{parentName:"p",href:"https://github.com/tc39/proposal-class-fields"},"private class fields in Javascript")," reached\nstage 3. This is going to be a great way to hide implementation details away\nfrom users of your classes. However, locking yourself in to an OOP style of\nprogramming is not always ideal if you prefer a more functional style. Let\u2019s\ntalk about how you can use Flow\u2019s ",(0,a.mdx)("a",{parentName:"p",href:"https://flow.org/en/docs/types/opaque-types/"},"opaque type aliases")," to get private properties\non any object type."))}c.isMDXComponent=!0}}]);