"use strict";(self.webpackChunknew_website=self.webpackChunknew_website||[]).push([[9489],{99489:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>i,contentTitle:()=>o,default:()=>c,frontMatter:()=>r,metadata:()=>p,toc:()=>l});var n=a(58168),s=(a(96540),a(15680));const r={title:"Announcing Typecasts","short-title":"Typecasts",author:"Basil Hosmer",hide_table_of_contents:!0},o=void 0,p={permalink:"/blog/2015/02/18/Typecasts",source:"@site/blog/2015-02-18-Typecasts.md",title:"Announcing Typecasts",description:"As of version 0.3.0, Flow supports typecast expression.",date:"2015-02-18T00:00:00.000Z",formattedDate:"February 18, 2015",tags:[],hasTruncateMarker:!0,authors:[{name:"Basil Hosmer"}],frontMatter:{title:"Announcing Typecasts","short-title":"Typecasts",author:"Basil Hosmer",hide_table_of_contents:!0},prevItem:{title:"Announcing Import Type",permalink:"/blog/2015/02/18/Import-Types"}},i={authorsImageUrls:[void 0]},l=[],m={toc:l};function c(e){let{components:t,...a}=e;return(0,s.mdx)("wrapper",(0,n.A)({},m,a,{components:t,mdxType:"MDXLayout"}),(0,s.mdx)("p",null,"As of version 0.3.0, Flow supports typecast expression."),(0,s.mdx)("p",null,"A typecast expression is a simple way to type-annotate any JavaScript expression. Here are some examples of typecasts:"),(0,s.mdx)("pre",null,(0,s.mdx)("code",{parentName:"pre",className:"language-JavaScript"},"(1 + 1 : number);\nvar a = { name: (null: ?string) };\n([1, 'a', true]: Array<mixed>).map(fn);\n")),(0,s.mdx)("p",null,"For any JavaScript expression ",(0,s.mdx)("inlineCode",{parentName:"p"},"<expr>")," and any Flow type ",(0,s.mdx)("inlineCode",{parentName:"p"},"<type>"),", you can write"),(0,s.mdx)("pre",null,(0,s.mdx)("code",{parentName:"pre",className:"language-JavaScript"},"(<expr> : <type>)\n")),(0,s.mdx)("p",null,(0,s.mdx)("strong",{parentName:"p"},"Note:")," the parentheses are necessary."))}c.isMDXComponent=!0}}]);