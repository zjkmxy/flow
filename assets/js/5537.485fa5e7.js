"use strict";(self.webpackChunknew_website=self.webpackChunknew_website||[]).push([[5537],{85537:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>r,contentTitle:()=>s,default:()=>m,frontMatter:()=>n,metadata:()=>l,toc:()=>u});var i=a(58168),o=(a(96540),a(15680));const n={title:"Opaque Type Aliases","short-title":"Opaque Type Aliases",author:"Jordan Brown","medium-link":"https://medium.com/flow-type/hiding-implementation-details-with-flows-new-opaque-type-aliases-feature-40e188c2a3f9"},s=void 0,l={permalink:"/blog/2017/07/27/Opaque-Types",source:"@site/blog/2017-07-27-Opaque-Types.md",title:"Opaque Type Aliases",description:"Do you ever wish that you could hide your implementation details away",date:"2017-07-27T00:00:00.000Z",formattedDate:"July 27, 2017",tags:[],hasTruncateMarker:!1,authors:[{name:"Jordan Brown"}],frontMatter:{title:"Opaque Type Aliases","short-title":"Opaque Type Aliases",author:"Jordan Brown","medium-link":"https://medium.com/flow-type/hiding-implementation-details-with-flows-new-opaque-type-aliases-feature-40e188c2a3f9"},prevItem:{title:"Linting in Flow",permalink:"/blog/2017/08/04/Linting-in-Flow"},nextItem:{title:"Strict Checking of Function Call Arity",permalink:"/blog/2017/05/07/Strict-Function-Call-Arity"}},r={authorsImageUrls:[void 0]},u=[],p={toc:u};function m(e){let{components:t,...a}=e;return(0,o.mdx)("wrapper",(0,i.A)({},p,a,{components:t,mdxType:"MDXLayout"}),(0,o.mdx)("p",null,"Do you ever wish that you could hide your implementation details away\nfrom your users? Find out how opaque type aliases can get the job done!"))}m.isMDXComponent=!0}}]);